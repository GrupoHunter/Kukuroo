grammar org.MiniGobstones with org.eclipse.xtext.common.Terminals

generate miniGobstones "http://www.MiniGobstones.org"

Model:
	main = Procedure;
	
Procedure:
	'procedure' name = ID LBRACE
		commands += Command*
	RBRACE
;

Command:
	Poner | Mover | PonerN | MoverN 
	| HayBolitas | PuedeMover 
	| If | While | For 
	| Variable
;

PonerN:
	{PonerN}
	'PonerN' LPAR int = INT ',' color = Color RPAR
;

MoverN:
	{MoverN}
	'MoverN' LPAR int = INT ',' dir = Direccion RPAR
;

Poner:
	{Poner}
	'Poner' LPAR color = Color RPAR
;


enum Color: Verde | Rojo | Azul | Negro;

Mover:
	{Mover}
	'Mover' LPAR dir = Direccion RPAR
;

enum Direccion: Norte | Sur | Este | Oeste;

HayBolitas:
	'hayBolitas' LPAR color = Color RPAR
;

PuedeMover:
	'puedeMover' LPAR dir = Direccion RPAR
;

Variable:
	{Variable}
	'var' varName = ID '=' INT | Booleans | Expression
;

While:
	{While}
	'While'LPAR expr = Expression RPAR LBRACE
		commands += Command*
	RBRACE
;

For:
	{For}
	'repeat' varName = ID 'in' INT | colorA=Color 'to' INT | colorB=Color LBRACE
		Command += Command*
	RBRACE   
;

If:
	{If}
	'if' LPAR expr = Expression RPAR LBRACE
		commandsThen += Command+
		RBRACE
	('else'LBRACE
		commandsElse += Command+
		RBRACE
	)?
;

Expression:
	 {Operator}(opNot = '!')? left = TerminalExpression (op = Operator right = TerminalExpression)?
;

TerminalExpression returns Expression:
	LPAR Expression RPAR | expr = Booleans
;

Booleans:
	HayBolitas | PuedeMover 
;

Operator: //TODO Validate
	'and' | 'or' |  '==' 
	|  '<' | '>' |  '<=' |  '>=' 
	|  '!=' |   '+' |  '-' 
;

terminal LPAR : '(';
terminal RPAR: ')';

terminal LBRACE : '{';
terminal RBRACE : '}';